How did viewing a diff between two versions of a file help you see the bug that was introduced?

Viewing the diff saved me time, I would have had to look for the change manually and that would have been strenuous.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

This allows programmers to implement old ideas that they need and gives them valuable insight into what has been changed specifically.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versiona automatically saved, like Google Docs does?

The pros are that you get to choose what you want to commit, when you want to commit it. Google Docs may save something you did not want to be saved. The con, however, is that you may forget to commit at times and your work would be lost.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, whereas others, like Google Docs, treat each file spearately?

version control systems are used by software developers who write apps and programs, therefore they may need to save multiple files in one commit if the changes in one of the files affected other files in their project.

How can you use the commands git log and git diff to view the history of files?

Enter into the directory of the project you are working in either by opening the folder where it is saved or cloning it into a new folder. From there, git log shows you all the previous commits with their respective times in which they were committed and a description of what was changed in the file. git diff can be used to compare the differences between two files. By entering git diff "firstFile" "secondFile", one can see what was added and what was changed in the file.

How might using version control make you more confident to make changes that could break something?

Using version control allows one to go back to a previous commit by using checkout, therefore it does not matter if a certain commit is messed up.

Now that you have your workspace set up, what do you want to try using Git for?

I am looking forward to using Git for my new Java project. I will be working with my friend Luis and using Github to share the project and manage all the files in the repository. i am also looking forward to tracking all the changes within the file, because I know lots of work has yet to be completed.